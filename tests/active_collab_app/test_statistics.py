from unittest import TestCase

from active_collab_app.statistics import Counter, Statistics


class TestCounter(TestCase):
    def test_counter(self):
        cnt = Counter()
        self.assertEqual(0, cnt.get())
        cnt.increment()
        self.assertEqual(1, cnt.get())
        cnt.increment()
        self.assertEqual(2, cnt.get())
        cnt.reset()
        self.assertEqual(0, cnt.get())


class TestStatistics(TestCase):
    def test_projects(self):
        stats = Statistics()
        values = stats.get()
        self.assertEqual(0, values["attachments"])
        self.assertEqual(0, values["companies"])
        self.assertEqual(0, values["project_categories"])
        self.assertEqual(0, values["project_labels"])
        self.assertEqual(0, values["project_notes"])
        self.assertEqual(0, values["projects"])
        self.assertEqual(0, values["subtasks"])
        self.assertEqual(0, values["task_comments"])
        self.assertEqual(0, values["task_history"])
        self.assertEqual(0, values["task_labels"])
        self.assertEqual(0, values["task_lists"])
        self.assertEqual(0, values["tasks"])
        self.assertEqual(0, values["users"])
        stats.attachments.increment()
        stats.companies.increment()
        stats.project_categories.increment()
        stats.project_labels.increment()
        stats.project_notes.increment()
        stats.projects.increment()
        stats.subtasks.increment()
        stats.task_comments.increment()
        stats.task_history.increment()
        stats.task_labels.increment()
        stats.task_lists.increment()
        stats.tasks.increment()
        stats.users.increment()
        values = stats.get()
        self.assertEqual(1, values["attachments"])
        self.assertEqual(1, values["companies"])
        self.assertEqual(1, values["project_categories"])
        self.assertEqual(1, values["project_labels"])
        self.assertEqual(1, values["project_notes"])
        self.assertEqual(1, values["projects"])
        self.assertEqual(1, values["subtasks"])
        self.assertEqual(1, values["task_comments"])
        self.assertEqual(1, values["task_history"])
        self.assertEqual(1, values["task_labels"])
        self.assertEqual(1, values["task_lists"])
        self.assertEqual(1, values["tasks"])
        self.assertEqual(1, values["users"])
        stats.reset_all()
        values = stats.get()
        self.assertEqual(0, values["attachments"])
        self.assertEqual(0, values["companies"])
        self.assertEqual(0, values["project_categories"])
        self.assertEqual(0, values["project_labels"])
        self.assertEqual(0, values["project_notes"])
        self.assertEqual(0, values["projects"])
        self.assertEqual(0, values["subtasks"])
        self.assertEqual(0, values["task_comments"])
        self.assertEqual(0, values["task_history"])
        self.assertEqual(0, values["task_labels"])
        self.assertEqual(0, values["task_lists"])
        self.assertEqual(0, values["tasks"])
        self.assertEqual(0, values["users"])